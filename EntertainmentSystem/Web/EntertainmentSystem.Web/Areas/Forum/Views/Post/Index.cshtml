@using EntertainmentSystem.Web.Controllers.Users
@using Microsoft.AspNet.Identity
@using EntertainmentSystem.Data.Models
@using EntertainmentSystem.Web.Areas.Forum.Controllers
@using EntertainmentSystem.Web.Areas.Forum.ViewModels
@model PostCommentsPageViewModel

<section>
    <div class="container">
        <h1 class="text-left">@Model.Post.Title</h1>
        <hr />
        <div class="es-forum-post-comments container">
            <div class="row" id="forum-post-@Model.Post.Id">
                <div class="col-xs-2 forum-vote">
                    <div class="row well text-center forum-vote-well">                        

                        @if (Request.IsAuthenticated)
                        {
                            <div class="col-xs-3 forum-vote-detail forum-vote-margin">
                                <strong id="es-forum-post-votes">@Model.Post.Votes</strong>
                            </div>
                            <div data-value="@VoteType.Positive" data-authorId="@User.Identity.GetUserId()" data-post="@Model.Post" class="pointer col-xs-3">
                                <strong class="glyphicon glyphicon-thumbs-up forum-vote-detail forum-vote-detail-up"></strong>
                            </div>
                            <div data-value="@VoteType.Negative" data-authorId="@User.Identity.GetUserId()" data-post="@Model.Post" class="pointer col-xs-3">
                                <strong class="glyphicon glyphicon-thumbs-down forum-vote-detail forum-vote-detail-down"></strong>
                            </div>
                        }
                        else
                        {
                            <div class="forum-vote-detail forum-vote-margin">
                                <strong id="es-forum-post-votes">@Model.Post.Votes</strong>
                            </div>
                        }

                    </div>
                </div>
                <div class="col-xs-12 col-sm-10 forum-topic">
                    <div class="es-forum-post-content">
                        <div class="row es-forum-post-row-margin-zero">@Model.Post.Content</div>
                        <hr class="es-forum-hr-in">
                        <div class="row es-forum-post-row-margin-zero">
                            <p class="es-forum-post-info-color">
                                <span>posted</span>
                                <time class="es-forum-post-info-data-color">@Model.Post.CreatedOn</time>
                                at @(Html.ActionLink<CategoryController>(@Model.Post.Category.Name, c => c.Index(GlobalConstants.ForumStartPage, GlobalConstants.StringEmpty, @Model.Post.Category.Name), new { area = GlobalConstants.ForumAreaName }, new { @class = "es-forum-post-info-data-color" }))
                                from @(Html.ActionLink<UsersController>(@Model.Post.Author.UserName, c => c.Index(@Model.Post.Author.Id), null, new { @class = "es-forum-post-info-data-color" }))

                                @if (Request.IsAuthenticated)
                                {
                                    <a class="pull-right" data-ajax="true" data-ajax-method="Get" data-ajax-mode="replace" data-ajax-success="showAnswerForm(203549)" data-ajax-update="#answer-form-203549" href="/Forum/Ajax/AnswerPartial/203549?isAnswer=True">Comment</a>
                                }

                            </p>
                        </div>
                    </div>
                    <hr class="es-forum-hr-in">
                    <div class="row es-forum-post-row-margin-zero">
                        @foreach (var tag in Model.Post.Tags)
                        {
                            @(Html.ActionLink<TagController>(@tag.Name, c => c.Index(GlobalConstants.ForumStartPage, GlobalConstants.StringEmpty, @tag.Name), null, new { @class = "label label-default" }))
                        }
                    </div>
                </div>
            </div>

            <br>
            <h3>Comments</h3>
            <hr />

            <div id="es-forum-post-comments">
                @foreach (var comment in Model.Post.Comments)
                {
                    @Html.Partial("_PostCommentPartial", comment)
                }

                <div class="text-center">
                    <nav>
                        <ul class="pagination pagination-sm">
                            @if (Model.CurrentPage != 1)
                            {
                                <li>
                                    <a href="@(Url.Action<PostController>(c => c.Index(@Model.Post.Id, Model.CurrentPage - 1)))" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                var className = string.Empty;

                                if (@Model.CurrentPage == @i)
                                {
                                    className = "active";
                                }

                                <li class="@className">
                                    <a href="@(Url.Action<PostController>(c => c.Index(@Model.Post.Id, @i)))">@(i)</a>
                                </li>
                            }

                            @if (Model.CurrentPage != Model.TotalPages)
                            {
                                <li>
                                    <a href="@(Url.Action<PostController>(c => c.Index(@Model.Post.Id, @Model.CurrentPage + 1)))" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>

        </div>
    </div>
</section>
