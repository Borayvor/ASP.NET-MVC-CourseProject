@using EntertainmentSystem.Web.Infrastructure.HtmlHelpers
@using EntertainmentSystem.Web.ViewModels.Media
@model MediaContentViewModel

@{
    const string ControllerName = "ModeratorMediaContent";
}

<h2 class="text-center">Media Contents</h2>
<br />
@Html.Partial("_UploadMediaContent")
@Html.Partial("_CreateMediaContent")

@(Html.FullFeaturedGrid<MediaContentViewModel>(
    ControllerName,
    m => m.Id,
    cols =>
    {
        cols.Bound(m => m.Id).Hidden();
        cols.Bound(m => m.ContentType);
        cols.Bound(m => m.ContentUrl).ClientTemplate(
            @"# if (ContentType === 'Picture') { #
            <img src='#:ContentUrl#' alt='Avatar' class='img-responsive' />
            # } #
            # if (ContentType === 'Video') { #
            <video class='video img-responsive' src='#:ContentUrl#' alt='Avatar' controls='controls'></video>
            # } #");
        cols.Bound(m => m.Title);
        cols.Bound(m => m.Description);
        cols.Bound(m => m.MediaCategory);
        cols.Bound(m => m.MediaCollection);
        cols.Bound(m => m.CreatedOn).Format("{0:yyyy-MM-dd HH:mm:ss}");
        cols.Bound(m => m.ModifiedOn).Format("{0:yyyy-MM-dd HH:mm:ss}");
        cols.Bound(m => m.IsDeleted);
        cols.Bound(m => m.DeletedOn).Format("{0:yyyy-MM-dd HH:mm:ss}");
        cols.Command(command => { command.Edit(); command.Destroy(); }).Title("Edit / Delete");
    }
))
