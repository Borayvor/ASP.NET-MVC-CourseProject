@using EntertainmentSystem.Common.Constants
@using System.Web.Mvc.Expressions
@using EntertainmentSystem.Web.Controllers
@using EntertainmentSystem.Web.Areas.Administration.Controllers.Media
@using EntertainmentSystem.Web.Areas.Administration.Controllers.Users
@using EntertainmentSystem.Web.Areas.Moderators.Controllers.Media
@using EntertainmentSystem.Web.Areas.Moderators.Controllers.Users
@using EntertainmentSystem.Web.Areas.Forum.Controllers
@using EntertainmentSystem.Web.Areas.Media.Controllers.Music
@using EntertainmentSystem.Web.Areas.Media.Controllers.Picture
@using EntertainmentSystem.Web.Areas.Media.Controllers.Video

<ul class="nav navbar-nav">
    <li>@(Html.ActionLink<HomeController>(HtmlConstants.HomeLinkName, c => c.Index()))</li>
    <li>@(Html.ActionLink<ForumHomeController>(HtmlConstants.ForumLinkName, c => c.Index()))</li>

    @if (Request.IsAuthenticated)
    {
        <li class="dropdown">
            <a href="" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                @GlobalConstants.MediaAreaName
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu" aria-labelledby="@GlobalConstants.MediaAreaName">
                <li>
                    @(Html.ActionLink<MusicController>(HtmlConstants.MediaMusicLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<PictureController>(HtmlConstants.MediaPicturesLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<VideoController>(HtmlConstants.MediaVideosLinkName, c => c.Index()))
                </li>
            </ul>
        </li>
    }

    @if (Request.IsAuthenticated && User.IsInRole(GlobalConstants.AdministratorRoleName))
    {
        <li class="dropdown">
            <a href="" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                @GlobalConstants.AdministratorAreaName
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu" aria-labelledby="@GlobalConstants.AdministratorAreaName">                
                <li>
                    @(Html.ActionLink<AdminMediaCategoryController>(HtmlConstants.AdminModeratorMediaCategoriesLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<AdminMediaCollectionController>(HtmlConstants.AdminModeratorMediaCollectionsLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<AdminMediaContentController>(HtmlConstants.AdminModeratorMediaContentsLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<AdminUsersController>(HtmlConstants.AdminModeratorUsersLinkName, c => c.Index()))
                </li>
            </ul>
        </li>
    }

    @if (Request.IsAuthenticated && User.IsInRole(GlobalConstants.ModeratorRoleName))
    {
        <li class="dropdown">
            <a href="" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                @GlobalConstants.ModeratorAreaName
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu" aria-labelledby="@GlobalConstants.ModeratorAreaName">               
                <li>
                    @(Html.ActionLink<ModeratorMediaCategoryController>(HtmlConstants.AdminModeratorMediaCategoriesLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<ModeratorMediaCollectionController>(HtmlConstants.AdminModeratorMediaCollectionsLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<ModeratorMediaContentController>(HtmlConstants.AdminModeratorMediaContentsLinkName, c => c.Index()))
                </li>
                <li>
                    @(Html.ActionLink<ModeratorUsersController>(HtmlConstants.AdminModeratorUsersLinkName, c => c.Index()))
                </li>
            </ul>
        </li>
    }

</ul>
